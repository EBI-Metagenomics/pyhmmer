name: Package

on:
  push:
    tags:
      - v*.*.*

jobs:

  wheel-linux:
    runs-on: ubuntu-latest
    name: Build Linux wheels
    strategy:
      matrix:
        include:
        - python-version: 3.6
          pyo3-python: /opt/python/cp36-cp36m/bin/python
          manylinux-img: quay.io/pypa/manylinux_2_24_x86_64
        - python-version: 3.7
          pyo3-python: /opt/python/cp37-cp37m/bin/python
          manylinux-img: quay.io/pypa/manylinux_2_24_x86_64
        - python-version: 3.8
          pyo3-python: /opt/python/cp38-cp38/bin/python
          manylinux-img: quay.io/pypa/manylinux_2_24_x86_64
        - python-version: 3.9
          pyo3-python: /opt/python/cp39-cp39/bin/python
          manylinux-img: quay.io/pypa/manylinux_2_24_x86_64
        - python-version: pypy-3.6
          pyo3-python: /opt/pypy/pypy3.6-7.3.3/bin/python
          manylinux-img: pypywheels/manylinux2010-pypy_x86_64
        - python-version: pypy-3.7
          pyo3-python: /opt/python/pp37-pypy37_pp73/bin/python
          manylinux-img: quay.io/pypa/manylinux_2_24_x86_64
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Build manylinux wheels
      uses: addnab/docker-run-action@v2
      with:
        image: ${{ matrix.manylinux-img }}
        options: -v ${{ github.workspace }}:/io -e TERM=$TERM
        shell: bash
        run: |
          ${{ matrix.pyo3-python }} -m pip install -U -r /io/.github/workflows/requirements.txt
          ${{ matrix.pyo3-python }} -m pip wheel --no-deps -vv /io -w /tmp
          for whl in /tmp/*.whl; do ${{ matrix.pyo3-python }} -m auditwheel repair $whl -w /io/dist; done
    - name: Store built wheels
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/*

  wheel-osx:
    runs-on: macos-latest
    name: Build OSX wheels
    strategy:
      matrix:
        python-version:
        - 3.6
        - 3.7
        - 3.8
        - 3.9
        - pypy-3.6
        - pypy-3.7
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Cache Python requirements
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache built C files
      uses: actions/cache@v2
      with:
        path: build
        key: ${{ runner.os }}-build-${{ hashFiles('Prodigal/*') }}
        restore-keys: |
          ${{ runner.os }}-build-
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python requirements
      run: python -m pip install -r .github/workflows/requirements.txt
    - name: Build wheel distribution
      run: python setup.py bdist_wheel
    - name: Store built wheels
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/*

  sdist:
    runs-on: ubuntu-latest
    name: Build source distribution
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install build requirements
      run: python -m pip install -r .github/workflows/requirements.txt
    - name: Build wheel distribution
      run: python setup.py sdist
    - name: Store built wheels
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/*

  upload:
    environment: PyPI
    runs-on: ubuntu-latest
    name: Upload
    needs:
    - sdist
    - wheel-linux
    - wheel-osx
    steps:
    - name: Download built distributions
      uses: actions/download-artifact@v2
      with:
          name: dist
          path: dist
    - name: Publish distributions to PyPI
      if: startsWith(github.ref, 'refs/tags/v')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: false

  docs:
    environment: ReadTheDocs
    runs-on: ubuntu-latest
    name: Rebuild docs
    needs:
    - upload
    steps:
    - name: Ping ReadTheDocs to rebuild the release docs
      uses: dfm/rtds-action@v1
      with:
        webhook_url: ${{ secrets.RTDS_WEBHOOK_URL }}
        webhook_token: ${{ secrets.RTDS_WEBHOOK_TOKEN }}
        commit_ref: ${{ github.ref }}
    - name: Ping ReadTheDocs to rebuild the stable docs
      uses: dfm/rtds-action@v1
      with:
        webhook_url: ${{ secrets.RTDS_WEBHOOK_URL }}
        webhook_token: ${{ secrets.RTDS_WEBHOOK_TOKEN }}
        commit_ref: refs/head/stable
